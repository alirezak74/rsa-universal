[Unit]
Description=RSA Chain Core - Security Hardened Blockchain Node
Documentation=https://github.com/rsacrypto/rsa-core
After=network.target
Wants=network.target

[Service]
Type=forking
User=rsa-core
Group=rsa-core
ExecStart=/opt/rsa-core/bin/rsa-core --daemon
ExecReload=/bin/kill -HUP $MAINPID
ExecStop=/opt/rsa-core/bin/emergency_rollback.sh emergency-shutdown
Restart=on-failure
RestartSec=10
TimeoutStartSec=60
TimeoutStopSec=30

# CRITICAL SECURITY HARDENING
# ===========================

# Process isolation
PrivateTmp=yes
ProtectSystem=strict
ProtectHome=yes
NoNewPrivileges=yes
ProtectKernelTunables=yes
ProtectKernelModules=yes
ProtectControlGroups=yes
RestrictRealtime=yes
RestrictNamespaces=yes

# File system access
ReadWritePaths=/var/log/rsa-core /var/run/rsa-core /opt/rsa-core-backups
ReadOnlyPaths=/opt/rsa-core /etc/rsa-core

# Network restrictions
RestrictAddressFamilies=AF_INET AF_INET6 AF_UNIX
IPAddressDeny=any
IPAddressAllow=localhost

# Memory and CPU limits
MemoryLimit=2G
MemoryMax=2G
CPUQuota=200%
TasksMax=100

# Security capabilities
CapabilityBoundingSet=CAP_NET_BIND_SERVICE
AmbientCapabilities=CAP_NET_BIND_SERVICE
SeccompFilter=@system-service
SystemCallFilter=@system-service
SystemCallErrorNumber=EPERM

# Environment
Environment=RSA_LOG_LEVEL=INFO
Environment=RSA_MAX_CONCURRENT_OPS=100
Environment=RSA_MEMORY_THRESHOLD=1048576
Environment=RSA_EMERGENCY_MODE=false

# Monitoring and alerting
ExecStartPost=/bin/bash -c 'echo "RSA Core started at $(date)" >> /var/log/rsa-core/service.log'
ExecStopPost=/bin/bash -c 'echo "RSA Core stopped at $(date)" >> /var/log/rsa-core/service.log'

# Emergency response
OnFailure=rsa-core-emergency.service

[Install]
WantedBy=multi-user.target